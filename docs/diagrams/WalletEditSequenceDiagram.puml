@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":WalletEditCommandParser" as WalletEditCommandParser LOGIC_COLOR
participant ":EditTransactorDescriptor" as EditTransactorDescriptor LOGIC_COLOR
participant ":WalletEditCommand" as WalletEditCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "transactionToEdit:Transaction" as transactionToEdit MODEL_COLOR
participant ":Wallet" as Wallet MODEL_COLOR
participant ":UniqueTransactionsList" as UniqueTransactionsList MODEL_COLOR
end box

[-> WalletEditCommandParser : execute()
activate WalletEditCommandParser

create EditTransactorDescriptor
WalletEditCommandParser -> EditTransactorDescriptor : EditTransactorDescriptor()
activate EditTransactorDescriptor

EditTransactorDescriptor --> WalletEditCommandParser : editTransactionDescriptor
deactivate EditTransactorDescriptor

create WalletEditCommand
WalletEditCommandParser -> WalletEditCommand : WalletEditCommand(1, editTransactionDescriptor)
activate WalletEditCommand
deactivate WalletEditCommandParser

[-[hidden]> WalletEditCommand :
destroy WalletEditCommandParser

deactivate WalletEditCommand

WalletEditCommand -> Model : getFilteredTransactionsList()
activate WalletEditCommand
activate Model

Model --> WalletEditCommand : lastShownList

WalletEditCommand -> transactionToEdit : lastShownList.get(1)
activate transactionToEdit

transactionToEdit --> WalletEditCommand : transactionToEdit
deactivate transactionToEdit

WalletEditCommand -> WalletEditCommand : createEditedTransaction(\ntransactionToEdit, \neditTransactionDescriptor)
activate WalletEditCommand

WalletEditCommand --> WalletEditCommand : editedTransaction
deactivate WalletEditCommand

WalletEditCommand -> Model : setTransaction(\ntransactionToEdit, \neditedTransaction)

Model -> Wallet : setTransaction(transactionToEdit, editedTransaction)
activate Wallet

Wallet -> UniqueTransactionsList : setTransaction(\ntransactionToEdit, \neditedTransaction)
activate UniqueTransactionsList

UniqueTransactionsList --> Wallet
deactivate UniqueTransactionsList

Wallet --> Model
deactivate Wallet

Model --> WalletEditCommand

WalletEditCommand -> Model : updateFilteredTransactions()
Model --> WalletEditCommand
deactivate WalletEditCommand
deactivate Model

[<--WalletEditCommand : result

[<-[hidden]-WalletEditCommand
destroy WalletEditCommand

@enduml
